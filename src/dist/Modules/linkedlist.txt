class LinkedListNode (

	def init(? data, ? next) = (
		this.data = data
		this.next = next
	)
	
	def toString = show this.data ++ " -> " ++ show this.next
)

class LinkedList implements List (

	def init() = (
		this.front = ?
		this.back = ?
	)

    	def init(LinkedListNode front, LinkedListNode back) = (
        	this.front = front 
        	this.back = back
    	)
    
    	def append data = (
		var node = LinkedListNode(data, ?)
		if (this.front == ?) (
			this.front = node
			return ?
		)
		
		if (this.back == ?) (
			this.back = node
			this.front.next = node
			return ?
		)
		
		this.back.next = node
		this.back = node
	)
	
	def head = front.data
	
	def tail = front.next

    	def cons data = (
        	node = LinkedListNode(data, this.front)
        	this.front = node
    	)
     
	def toString = show this.front
)



